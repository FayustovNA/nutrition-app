import React from 'react';
import styles from './application.module.css';
import Input from '../../ui/inputs/input';
import useForm from '../../hooks/useForm';
import Checkbox from '../../ui/checkbox/checkbox';
import Button from '../../ui/button/button';

export const ApplicationWindow = ({ onClose }: { onClose: () => void }) => {

    const { values, handleChange } = useForm({
        first_name: '',
        phone: '',
        agree: false, // –¢–∏–ø —Å–æ–≥–ª–∞—Å–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å boolean
    });

    const handleSubmit = async (event: React.FormEvent) => {
        event.preventDefault();

        if (!values.agree) return;

        const botToken = '7880785237:AAH6pJhlKTngLnkyQY3OzrI8HZt7Px8e3Xk';
        const chatId = '342866614';

        const message = `
üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*
- *–ò–º—è:* ${values.first_name}
- *–¢–µ–ª–µ—Ñ–æ–Ω:* ${values.phone}
        `;

        try {
            await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: chatId,
                    text: message,
                    parse_mode: 'Markdown',
                }),
            });
            onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
        }
    };

    return (
        <div className={styles.content}>
            <img className={styles.img} src='nutrition-app/images/application/applay.png' alt="Welcome" />
            <h3 className={styles.h3}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BFN!</h3>
            <p className={styles.text}>
                –¢–µ–±—è –∂–¥–µ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ø–∏—Ç–∞–Ω–∏–µ–º, –æ–±—Ä–∞–∑–æ–º –∂–∏–∑–Ω–∏ –∏ –ø—Ä–∏–≤—ã—á–∫–∞–º–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç—Ä—É–µ–º - –ª—É—á—à–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞!
            </p>
            <form className={styles.forms} onSubmit={handleSubmit}>
                <Input
                    placeholder="–ò–º—è"
                    name="first_name"
                    styled="main"
                    type="text"
                    onChange={handleChange}
                    value={values.first_name}
                    minLength={2}
                    errorMessage="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
                    required
                />
                <Input
                    placeholder="–ù–æ–º–µ—Ä Telegram"
                    name="phone"
                    styled="main"
                    onChange={handleChange}
                    value={values.phone}
                    pattern="^\+?\d{1,3}[-\s]?\d{1,14}$"
                    maxLength={15}
                    minLength={10}
                    errorMessage="–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä"
                    required
                />
                <div className={styles.checkbox}>
                    <Checkbox
                        name="agree"
                        label="–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
                        onChange={(e) =>
                            handleChange({
                                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                                //@ts-expect-error
                                target: { name: 'agree', value: e.target.checked }, // handle boolean
                            })
                        }
                        checked={values.agree}
                        required
                    />
                </div>
                <div className={styles.button}>
                    <Button
                        variant="default"
                        size='width'
                        buttonHtmlType="submit"
                        disabled={!values.agree} // –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–≥–ª–∞—Å–∏–∏
                    >
                        <p className={styles.btntxt}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</p>
                    </Button>
                </div>
            </form>
        </div>
    );
};